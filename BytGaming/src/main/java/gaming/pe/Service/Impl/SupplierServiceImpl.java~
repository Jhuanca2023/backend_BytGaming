package gaming.pe.Service.Impl;

import gaming.pe.DTO.SupplierDTO;
import gaming.pe.Entity.Supplier;
import gaming.pe.Mappers.SupplierMapper;
import gaming.pe.Repository.SupplierRepository;
import gaming.pe.Service.SupplierService;
import jakarta.persistence.EntityNotFoundException;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@RequiredArgsConstructor
@Service
public class SupplierServiceImpl implements SupplierService {

    private final SupplierRepository supplierRepository;
    private final SupplierMapper mapper;

    @Override
    public List<Supplier> findAll() {
        return supplierRepository.findAll();
    }

    @Override
    public Supplier getById(Long id) {
        return supplierRepository.findById(id).orElseThrow(() -> new RuntimeException("Supplier not found"));
    }

    @Override
    public SupplierDTO save(SupplierDTO supplierDTO) {
        Supplier supplier = mapper.toEntity(supplierDTO);
        return mapper.toDTO(supplierRepository.save(supplier));
    }

    @Override
    public Supplier update(Long id, Supplier supplier) {
        Supplier existing = getById(id);
        existing.setName(supplier.getName());
        existing.setRuc(supplier.getRuc());
        existing.setEmail(supplier.getEmail());
        existing.setPhone(supplier.getPhone());
        existing.setIsActive(supplier.getIsActive());
        return supplierRepository.save(existing);
    }

    @Override
    public void delete(Long id) {
        supplierRepository.deleteById(id);
    }

}
